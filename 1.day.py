"""
列表list 列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。
列表是写在方括号 [] 之间、用逗号分隔开的元素列表
list = ['abcd', 786, 2.23, 'runoob', 70.2]
"""
##################################################################################################################
"""
元组tuple  元组和列表相识，唯一的区别是元组的元素不能修改,元组写在小括号 () 里，元素之间用逗号隔开。
注意：
1、与字符串一样，元组的元素不能修改。
2、元组也可以被索引和切片，方法一样。
3、注意构造包含 0 或 1 个元素的元组的特殊语法规则。
4、元组也可以使用 + 操作符进行拼接。
tuple = ('abc', 688, 243.23)
"""
###################################################################################################################
"""
集合（Set）是一种无序、可变的数据类型，用于存储唯一的元素。集合中的元素不会重复，并且可以进行交集、并集、差集等常见的集合操作。在 Python 中，集合使用大括号 {} 表示，元素之间用逗号 , 分隔。
另外，也可以使用 set() 函数创建集合。
注意：创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。
set = {value01,value02}
或者
set(value)
"""
setCS = {'taobao', 'pdd', 'jd', 'pdd'}
print(setCS)  # 会自动去除重复项
# 输出结果 {'taobao', 'jd', 'pdd'}
# 集合可以进行集合运算
a = set('abcdefg')
b = set('abcd')

print(a - b)  # a和b的差集
print(a | b)  # a和b的并集
print(a & b)  # a和b的交集
print(a ^ b)  # a和b中不同时存在的元素

# 输出结果
# {'f', 'e', 'g'}
# {'a', 'd', 'g', 'e', 'b', 'f', 'c'}
# {'a', 'b', 'd', 'c'}
# {'f', 'g', 'e'}
###################################################################################################################
"""
字典（dictionary）是Python中另一个非常有用的内置数据类型。
列表是有序的对象集合，字典是无序的对象集合。两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。
字典是一种映射类型，字典用 { } 标识，它是一个无序的 键(key) : 值(value) 的集合。
键(key)必须使用不可变类型。
在同一个字典中，键(key)必须是唯一的
"""
dict = {}
dict ['one'] = "1 - 河南"
dict [2] = "2 - 驻马店"

tinydict = {'name': 'runoob', 'code': 1}

print(dict['one'])
print(dict[2])
